---
engine: knitr
excerpt: ""
draft: false
format: 
  html:
    theme: simplex
    self-contained: true
    max-width: 1920px
    code-fold: show
    code-tools: true
    highlight-style: atom-one-dark
    code-block-bg: "#282c34"
---

```{css, echo = FALSE}
.justify { text-align: justify !important }
```

::: justify
# Aplicación 2.5 (Modelo de regresión lineal con variables cualitativas): Brecha salarial entre hombres y mujeres en Estados Unidos {.unnumbered}

Desde el punto de vista metodológico, el objetivo de esta aplicación es la introducción del uso de *variables ficticias* en el modelo de regresión lineal, mostrando su potencial para modelizar situaciones donde alguno de los regresores es de tipo cualitativo.

Por otra parte, desde el punto de vista económico, estamos interesados en cuantificar el alcance de la discriminación salarial de las mujeres en el mercado laboral americano. Así, en primer lugar compararemos los salarios de hombres y mujeres que comparten similitudes en los dos factores más relevantes para la determinación del salario, que son la edad o el nivel de educación, y luego extenderemos la especificación básica con diferentes variables de control para tener una aproximación más realista del concepto *ceteris paribus* (para poder aproximarse a la verdadera relación causal hay que tratar de condicionar sobre \`todas' las variables relevantes para la determinación del salario).

Como especificación de partida se usará el siguiente modelo log-lineal, que se corresponde con la [ecuación de salarios de Mincer](https://es.wikipedia.org/wiki/Funci%C3%B3n_de_ingresos_de_Mincer):

$$
log(w_{i}) = \beta_1 + \beta_2  female_{i} +  \beta_3  age_{i} +  \beta_4  educ_{i} + e_{i}
$$
:::

## Código R {.unnumbered}

```{r}
#| include: true
#| warning: false
#| message: false

# Lectura de librerías
library(tidyverse)
library(huxtable)
library(car)
library(lmtest)
library(sandwich)
library(moments)
library(corrplot)
#
# INFORMACIÓN SOBRE EL CONJUNTO ORIGINAL DE DATOS Y SOBRE
# LA OBTENCIÓN DE LA SUBMUESTRA USADA EN LA APLICACIÓN
#
#  USA 2014 CENSUS DATA: MORG14_USA.csv
# - Cross-sectional data: year 2014
# - Observations are individuals of age 15 to 85 
#   (representative sample of this sub-pop.)
# - ID variables:
#   HHID: 	houeshold id
#   HRHHID2: 2nd part of houeshold id (some original hhid-s are split)
#   LINENO:  person ("line") number in household
#   AGE:	age
#   SEX:	gender
#   EARNWKE: weakly earnings
#   UHOURSE: usual work hours
#   OCC2012:	occupational code (census 2010 classification)
#   GRADE92:	highest educational grade completed
# - Labels of the variables are downlodable from here:
#   <http://data.nber.org/morg/docs/cpsx.pdf>
# - Occupational classification (census 2010) codes:
#   <https://www.bls.gov/cps/cenocc2010.htm>
#
# FILTRADO DE OBSERVACIONES: 
#
# Edad entre 24 to 64 años; 
# Haber trabajado más de 20 horas semanales; 
# Ingresos semanales positivos; 
# Empleados con estudios universitarios (grade92>44)
#
# Selección sobre el fichero original [cps = read_csv("MORG14_USA.csv")]:
# cps <- cps %>% 
# filter(age>=24 & age<=64 & uhours>=20 & earnwke>0 & grade92>=44)
#
# Lectura de datos
cps <- read_csv("data/CPS2014_USA.csv")
# TRASNSFORMACIÓN DE VARIABLES
cps <- cps %>% mutate(female=sex==2, w=earnwke/uhours) %>% filter(w>=1)
# DISTRIBUCIÓN DE LOS SALARIOS
cps %>% dplyr::select(earnwke,uhours,w) %>% summary()
# Histograma diferenciado por género
earnings_hist<- ggplot(data = cps, 
                       aes (x = w, y = 2*(..count..)/sum(..count..))) +
  geom_histogram(binwidth = 4,  size = 0.25, alpha = 0.8,  
                 boundary=0, closed='left',  show.legend=F, na.rm =TRUE) +
  labs(x = "Hourly earnings (dollars)", y = "Percent") +
  facet_wrap(~ifelse(female, "Female", "Male"))+
  labs(x = "Hourly earnings (dollars)",y = "Percent")+
  scale_x_continuous(limits = c(0,100) , breaks = seq(1, 100, by = 10),) +
  scale_y_continuous(limits=c(0, 0.20), breaks = seq(0, 0.20, by = 0.05),
                     labels = scales::percent_format(accuracy = 5L))
earnings_hist
# Densidad estimada diferenciada por género
ggplot(data = cps) + geom_density(aes(x = w, fill = female), alpha=0.3)
# SALARIOS, EDAD Y GÉNERO
reg0 <- lm(log(w) ~ female, data=cps)
reg1 <- lm(log(w) ~ female + age, data=cps)
reg2 <- lm(log(w) ~ female*age, data=cps) # Interacción entre género y edad
reg21 <- lm(log(w) ~ age, data=cps %>% filter(female==1)) # Ec. mujeres
reg22 <- lm(log(w) ~ age, data=cps %>% filter(female==0)) # Ecu. hombres
huxreg(reg0, reg1, reg2, reg21, reg22, 
       statistics = c(N = "nobs", R2 = "r.squared"))
# No linealidad en la edad
cps <- cps %>% mutate(age2=age**2, age3=age**3, age4=age**4)
reg3 <- lm(log(w) ~ female + age + age2 + age3 + age4, data=cps)
huxreg(reg1, reg3, statistics = c(N = "nobs", R2 = "r.squared"))
# SALARIOS, SEXO, EDAD Y NIVEL DE EDUCACIÓN
cps <- cps %>% mutate(ed_MA=as.numeric(grade92==44), 
                      ed_PSD = as.numeric(grade92==45), 
                      ed_DD = as.numeric(grade92==46))
reg4 <- lm(log(w) ~ female + age + age2 + age3 + age4 + ed_PSD + ed_DD, 
           data=cps)
huxreg(reg3, reg4, statistics = c(N = "nobs", R2 = "r.squared"))
# SALARIOS, SEXO, EDAD, EDUCACIÓN Y OTROS FACTORES (CUALITATIVOS) ADICIONALES
# Construcción de factores condicionantes
# Factores demográficos (predeterminados)
cps <- cps %>% mutate(white=as.numeric(race==1),
                      afram = as.numeric(race==2),
                      asian = as.numeric(race==4),
                      hisp = !is.na(ethnic),
                      othernonw = as.numeric(white==0 & afram==0 
                                             & asian==0 & hisp==0),
                      nonUSborn = as.numeric(
                        prcitshp=="Foreign Born, US Cit By Naturalization" | 
                          prcitshp=="Foreign Born, Not a US Citizen") 
)
# Factores demográficos (potencialmente endógenos)
cps <- cps %>% mutate(married = as.numeric(marital==1 | marital==2),
                      divorced = as.numeric(marital==3 | marital==5 | marital==6),
                      wirowed = as.numeric(marital==4),
                      nevermar = as.numeric(marital==7),
                      child0 = as.numeric(chldpres==0),
                      child1 = as.numeric(chldpres==1),
                      child2 = as.numeric(chldpres==2),
                      child3 = as.numeric(chldpres==3),
                      child4pl = as.numeric(chldpres>=4))
# Factores laborales
cps <- cps %>% mutate(fedgov = as.numeric(class=="Government - Federal"),
                      stagov = as.numeric(class=="Government - State"),
                      locgov = as.numeric(class=="Government - Local"),
                      nonprof = as.numeric(class=="Private, Nonprofit"),
                      ind2dig = as.integer(as.numeric(as.factor(ind02))/100),
                      occ2dig = as.integer(occ2012/100),
                      union = as.numeric(unionmme=="Yes" | unioncov=="Yes"))
# Regresión con factores
reg5 <- lm(log(w) ~ female 
           + age + age2 + age3 + age4 
           + ed_PSD + ed_DD 
           + afram + hisp + asian + othernonw + nonUSborn 
           + married + divorced + wirowed + child1 + child2 + child3 +child4pl
           + uhours + fedgov + stagov + locgov + nonprof + union 
           + as.factor(stfips) + as.factor(ind2dig) + as.factor(occ2dig), 
           data=cps)
summary(reg5)
```

## Código Python {.unnumbered}

```{python}
#| include: true
#| warning: false
#| message: false

# Lectura de librerías
import os
import sys
import warnings
import numpy as np
import pandas as pd
from mizani.formatters import percent_format
from plotnine import *
from datetime import datetime
from scipy.stats import norm
import statsmodels.api as sm
import statsmodels.formula.api as smf
from mizani import transforms
from stargazer.stargazer import Stargazer
#
# Filtrado sobre el fichero original cps = pd.read_csv('data/MORG14_USA.csv')
# cps = cps.query("age>=24 & age<=64 & uhours>=20 & earnwke>0 & grade92>=44")
#
# Lectura de datos
cps = pd.read_csv('data/CPS2014_USA.csv')
# Operaciones con variables
cps["female"] = (cps.sex == 2).astype(int)
cps["w"] = cps["earnwke"] / cps["uhours"]
cps = cps.query("w>=1")
# DISTRIBUCIÓN DE LOS SALARIOS
cps.loc[:,["earnwke","uhours","w"]].describe()
# SALARIOS, SEXO Y EDAD
reg1 = smf.ols(formula="np.log(w) ~ female", data=cps).fit()
print(reg1.summary())
# Histograma diferenciado por género
ggplot(cps, aes(x="w", y="2*stat(count)/sum(stat(count))")) + geom_histogram(
    binwidth=4,
    color="white",
    size=0.25,
    alpha=0.8,
    show_legend=False,
    na_rm=True,
) + labs(x="Hourly earnings (dollars)", y="Percent") + facet_wrap('~female',labeller={'0':"Male",'1':"Female"}
) + labs(
    x="Hourly earnings (dollars)", y="Percent"
) + scale_x_continuous(
    limits=(0, 100),
) + scale_y_continuous(
    limits=(0, 0.20), labels=percent_format()
) + theme_bw()
# Densidad estimada diferenciada por género
ggplot(cps, aes(x="w", y="stat(density)", color="factor(female)")) + geom_density(
    adjust=1.5, show_legend=False, na_rm=True, size=0.7
) + labs(x="Hourly wage (dollars)", y="Density", color=""
)  + scale_x_continuous(
    expand=(0.01, 0.01), limits=(0, 100),
) + scale_y_continuous(
    expand=(0.0, 0.0), limits=(0, 0.035),
) + geom_text(
    aes(x=55, y=0.028, label="'Male'"),  size=10
) + geom_text(
    aes(x=55, y=0.020, label="'Female'"), size=10
) + theme_bw()
# SALARIOS, EDAD Y GÉNERO
reg0 = smf.ols(formula="np.log(w) ~ female", data=cps).fit()
reg1 = smf.ols(formula="np.log(w) ~ female + age", data=cps).fit()
reg2 = smf.ols(formula="np.log(w) ~ female*age", data=cps).fit()
reg21 = smf.ols(formula="np.log(w) ~ age", data=cps.query("female==1")).fit()
reg22 = smf.ols(formula="np.log(w) ~ age", data=cps.query("female==0")).fit()
stargazer = Stargazer([reg0, reg1, reg2])
stargazer.custom_columns(["log(w)", "log(w)", "log(w)"], [1, 1, 1])
stargazer.covariate_order(["female", "age", "female:age", "Intercept"])
stargazer.rename_covariates({"Intercept": "Constant"})
stargazer
# Regresiones diferenciadas por sexo
print(reg21.summary())
print(reg22.summary())
# No linealidad en la edad
cps["age2"] = np.power(cps["age"], 2)
cps["age3"] = np.power(cps["age"], 3)
cps["age4"] = np.power(cps["age"], 4)
reg3 = smf.ols(formula="np.log(w) ~ female + age + age2 + age3 + age4", data=cps).fit()
stargazer = Stargazer([reg1,reg3])
stargazer.covariate_order(
    ["female", "age", "age2","age3","age4","Intercept"]
)
stargazer.rename_covariates({"Intercept": "Constant"})
stargazer
# SALARIOS, SEXO, EDAD Y NIVEL DE EDUCACIÓN
cps["ed_MA"] = (cps["grade92"] == 44).astype(int)
cps["ed_PSD"] = (cps["grade92"] == 45).astype(int)
cps["ed_DD"] = (cps["grade92"] == 46).astype(int)
reg4 = smf.ols(formula="np.log(w) ~ female + age + age2 + age3 + age4 + ed_PSD + ed_DD", data=cps).fit()
stargazer = Stargazer([reg3,reg4])
stargazer.covariate_order(
    ["female", "age", "age2", "age3", "age4", "ed_PSD", "ed_DD", "Intercept"]
)
stargazer.rename_covariates({"Intercept": "Constant"})
stargazer
# SALARIOS, SEXO, EDAD, EDUCACIÓN Y OTROS FACTORES (CUALITATIVOS) ADICIONALES 
# Construcción de factores condicionantes
cps["white"] = (cps["race"] == 1).astype(int)
cps["afram"] = (cps["race"] == 2).astype(int)
cps["asian"] = (cps["race"] == 4).astype(int)
cps["hisp"] = (cps["ethnic"].notna()).astype(int)
cps["othernonw"] = (
    (cps["white"] == 0) & (cps["afram"] == 0) & (cps["asian"] == 0) & (cps["hisp"] == 0)
).astype(int)
cps["nonUSborn"] = (
    (cps["prcitshp"] == "Foreign Born, US Cit By Naturalization")
    | (cps["prcitshp"] == "Foreign Born, Not a US Citizen")
).astype(int)
cps['married']=((cps['marital']==1)|(cps['marital']==2)).astype(int)
cps['divorced']=((cps['marital']==3)&(cps['marital']==5)).astype(int)
cps['wirowed']=(cps['marital']==4).astype(int)
cps['nevermar']=(cps['marital']==7).astype(int)
cps['child0']=(cps['chldpres']==0).astype(int)
cps['child1']=(cps['chldpres']==1).astype(int)
cps['child2']=(cps['chldpres']==2).astype(int)
cps['child3']=(cps['chldpres']==3).astype(int)
cps['child4pl']=(cps['chldpres']>=4).astype(int)
cps['fedgov']=(cps['class']=="Government - Federal").astype(int)
cps['stagov']=(cps['class']=="Government - State").astype(int)
cps['locgov']=(cps['class']=="Government - Local").astype(int)
cps['nonprof']=(cps['class']=="Private, Nonprofit").astype(int)
cps['ind2dig']=((pd.Categorical(cps["ind02"]).codes+1)/100).astype(int)
cps['occ2dig']=(cps["occ2012"]/100).astype(int)
cps['union']=((cps['unionmme']=="Yes")|(cps['unioncov']=="Yes")).astype(int)
# Regresión con factores
reg5 = smf.ols(formula="np.log(w) ~ female + age + age2 + age3 + age4 + ed_DD + afram + hisp + asian + othernonw + nonUSborn +  married + divorced+ wirowed + child1 + child2 + child3 + child4pl + uhours + fedgov + stagov + locgov + nonprof + union + C(stfips) + C(ind2dig) + C(occ2dig)", data=cps).fit()
print(reg5.summary())
# COMPARACIÓN FINAL
stargazer = Stargazer([reg0, reg5])
stargazer.covariate_order(["female"])
stargazer.add_line("Edad y educación", ["", "Yes"])
stargazer.add_line("Características familliares", ["", "Yes"])
stargazer.add_line("Características demográficas", ["", "Yes"])
stargazer.add_line("Características laborales", ["", "Yes"])
stargazer
```
