---
title: "TEMA 1: INTRODUCCIÓN A LA ECONOMETRÍA"
subtitle: "Aplicación 1.1 (Datos de corte transversal): Demanda familiar de carne"
author: Julián Ramajo
excerpt: ""
draft: false
format: 
  html:
    theme: simplex
    self-contained: true
    max-width: 1920px
    code-fold: show
    code-tools: true
    highlight-style: atom-one-dark
    code-block-bg: "#282c34"
---

## Introducción

En esta aplicación se estimará una función de demanda de carne con datos micro sobre 30 familias americanas ( _i_ = 1, 2,..., 30):

$$Q_{i} = f(P_{i}, Y_{i}) + e_{i}$$

donde *Q* representa la cantidad demandada, *P* es el precio pagado por ella en el mercado, y finalmente *Y* es la renta familiar neta disponible.

## Librerías

Lectura de las ibrerías necesarias para la ejecución de la aplicación.

::: panel-tabset

## R

```{r}
library(tidyverse)
library(GGally)
library(modelsummary)
library(skimr)
```

## Python

```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import statsmodels.api as sm
import statsmodels.formula.api as smf
```

:::

## Datos

Lectura y descripción de los datos usados en la aplicación.

::: panel-tabset

## R

Usando el método de trabajo `tidyverse` (<https://www.tidyverse.org/>).

```{r}
# Lectura y descripción de la base de datos
DEM_CARNE <- read_csv("DEM_CARNE.csv")
dim(DEM_CARNE)
str(DEM_CARNE)
head(DEM_CARNE)
tail(DEM_CARNE)
# Análisis exploratorio (EDA)
# Estadística descriptiva
# Resultados estándar (R 'base')
summary(DEM_CARNE)
# Librerías skimr y modelsummary (https://vincentarelbundock.github.io/modelsummary/index.html)
skim(DEM_CARNE)
datasummary_correlation(DEM_CARNE)
# Gráficas parciales (librerías GGally y ggplot)
GGally::ggpairs(DEM_CARNE)
ggplot(DEM_CARNE, aes(x = P, y = Q)) +
  geom_point(color = "blue") +
  geom_jitter(color = "blue") +
  geom_function(fun = function(x) {y = mean(DEM_CARNE$Q)}, linetype = "dotdash") +
  geom_smooth(method='lm', formula = y~x, se = FALSE, color = "red", linetype = "dashed") +
  xlab("P (precio)") +
  ylab("Q (cantidad)") +
  theme_minimal()
ggplot(DEM_CARNE, aes(x = Y, y = Q)) +
  geom_point(color = "blue") +
  geom_jitter(color = "blue") +
  geom_function(fun = function(x) {y = mean(DEM_CARNE$Q)}, linetype = "dotdash") +
  geom_smooth(method='lm', formula = y~x, se = FALSE, color = "red", linetype = "dashed") +
  xlab("Y (renta)") +
  ylab("Q (cantidad)") +
  theme_minimal()
```

## Python

Usando la librería `pandas` (<https://pandas.pydata.org/>).

```{python}
# Lectura y descripción de la base de datos
DEM_CARNE = pd.read_csv("DEM_CARNE.csv")
DEM_CARNE.head()
DEM_CARNE.tail()
#  Estadística descriptiva
DEM_CARNE.describe()
# Gráficas parciales (librería matplotlib)
plt.scatter(DEM_CARNE.P, DEM_CARNE.Q)
plt.xlabel("Precio (P)")
plt.ylabel("Cantidad (Q)")
plt.show()
plt.scatter(DEM_CARNE.Y, DEM_CARNE.Q)
plt.xlabel("Renta (Y)")
plt.ylabel("Cantidad (Q)")
plt.show()
```

:::

## Regresiones por MCO

Se estimará por mínimos cuadrados ordianarios -MCO- el siguiente modelo lineal:

$$Q_i = \beta_0 + \beta_1 P_i + \beta_2 Y_i + e_i$$

::: panel-tabset

## R

Comando `lm` de *R stats* (<https://rdrr.io/r/stats/lm.html>).

```{r}
lin_model <- lm(formula = Q ~ P + Y, data = DEM_CARNE)
# Resultados estándar (R base)
summary(lin_model)
# Librería modelsummary
modelsummary(lin_model)
modelplot(lin_model)
```

## Python

Comando `smf.ols` de la librería `statsmodels` (<https://www.statsmodels.org/>).

```{python}
model = smf.ols(formula = "Q ~ P + Y", data = DEM_CARNE)
lin_model = model.fit()
print(lin_model.summary())
```

:::
