library(fpp3)
AIREF.data <- readr::read_csv("AIREF_ESP.csv")
#
macro.ESP <- AIREF.data %>%
mutate(quarter = yearquarter(obs)) %>%
select(-obs) %>%
as_tsibble(index = quarter)
macro.ESP
#
macro.ESP %>%
autoplot(YER) +
labs(title = "GDP", subtitle = "Espa√±a") +
xlab("Year")
#
class(macro.ESP)
class(AIREF.data)
install.packages("DBI")
install.packages("dplyr")
install.packages(c("dplyr", "expm", "fansi", "libcoin", "magick", "pROC", "Rcpp", "sass", "svars", "tibble", "VGAM"))
library(eurostat)
library(tidyverse)
query <- search_eurostat("GDP PPS", type="table")
query <- search_eurostat("GDP", type="table")
View(query)
query <- search_eurostat("NUTS", type="table")
View(query)
GDP_PPS <- get_eurostat("tgs0006") %>%
+     filter(time == "2018-01-01") %>%
+     mutate(cat = cut_to_classes(values, n=5, decimals=1))
GDP_PPS <- get_eurostat("nama_10r_2gdp")
View(GDP_PPS)
GDP_PPS_2018 <- get_eurostat("nama_10r_2gdp") %>%
+     filter(time == "2018-01-01") %>%
+     mutate(cat = cut_to_classes(values, n=5, decimals=1))
View(GDP_PPS)
GDP_PPS_2018 <- GDP_PPS %>% filter(time == "2018-01-01") %>% mutate(cat = cut_to_classes(values, n=5, decimals=1))
View(GDP_PPS_2018)
mapdata <- get_eurostat_geospatial(nuts_level = 2) %>% right_join(GDP_PPS_2018)
ISCO_map <- get_eurostat_geospatial(nuts_level = 2)
rm(ISCO_map)
GISCO_map <- get_eurostat_geospatial(nuts_level = 2)
ggplot(GISCO_map)
View(GISCO_map)
View(GDP_PPS_2018)
View(GDP_PPS)
class(GISCO_map)
class(GDP_PPS_2018)
?right_join
nuts2.sf <- merge(GISCO_map, GDP_PPS_2018, by.x = "NUTS_ID", by.y = "geo", all.x = TRUE)
View(GISCO_map)
View(GDP_PPS_2018)
View(nuts2.sf)
nuts2.sf.2 <- merge(GISCO_map, GDP_PPS_2018, by.x = "NUTS_ID", by.y = "geo")
View(nuts2.sf)
rm(nuts2.sf)
rm(nuts2.sf.2)
PPS_HAB_2018 <- GDP_PPS_2018 %>% filter(unit == "PPS_HAB_EU27_2020")
View(PPS_HAB_2018)
View(GDP_PPS_2018)
View(PPS_HAB_2018)
View(GISCO_map)
GDP_PPS_2018.sf <- merge(GISCO_map, GDP_PPS_2018, by.x = "geo", by.y = "geo", all.x = TRUE)
class(GISCO_map)
class(GDP_PPS_2018.sf)
class(GDP_PPS_2018)
View(GDP_PPS_2018.sf)
ggplot(GDP_PPS_2018.sf, aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP by NUTS 2 regions (tgs00006)", subtitle="(PPS per inhabitant in % of the EU27 (from 2020) average)", fill="PPS_HAB_EU27_2020") +
theme_light()
GDP_PPS_2018.sf %>% filter(unit == "PPS_HAB_EU27_2020") %>%  ggplot(aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP by NUTS 2 regions (tgs00006)", subtitle="(PPS per inhabitant in % of the EU27 (from 2020) average)", fill="PPS_HAB_EU27_2020") +
theme_light()
View(GDP_PPS_2018.sf)
View(PPS_HAB_2018)
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE)
DP_PPS_2018.sf %>% filter(unit == "PPS_HAB_EU27_2020") %>%  ggplot(aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in % of the EU27 (from 2020) average]",
fill="PPS_HAB_EU27_2020") + theme_light()
ggplot(aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in % of the EU27 (from 2020) average]",
fill="PPS_HAB_EU27_2020") + theme_light()
ggplot(aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in % of the EU27 (from 2020) average]",
fill="PPS_HAB_EU27_2020") + theme_light()
ggplot(GDP_PPS_2018.sf, aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in % of the EU27 (from 2020) average]",
fill="PPS_HAB_EU27_2020") + theme_light()
View(GDP_PPS_2018.sf)
ggplot(GDP_PPS_2018.sf, aes(fill=values)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in % of the EU27 (from 2020) average]",
fill="PPS_HAB_EU27_2020") + theme_light()
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>% mutate(cat2 = cut_to_classes(values, n=5, decimals=1))
ggplot(GDP_PPS_2018.sf, aes(fill=values)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in % of the EU27 (from 2020) average]",
fill="PPS_HAB_EU27_2020") + theme_light()
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>% mutate(cat2 = cut_to_classes(values, n=5, decimals=1))
ggplot(GDP_PPS_2018.sf, aes(fill=cat2)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in % of the EU27 (from 2020) average]",
fill="PPS_HAB_EU27_2020") + theme_light()
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>% mutate(cat2 = cut_to_classes(values, n=10, decimals=1))
ggplot(GDP_PPS_2018.sf, aes(fill=cat2)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in % of the EU27 (from 2020) average]",
fill="PPS_HAB_EU27_2020") + theme_light()
library(eurostat)
library(tidyverse)
GDP_PPS <- get_eurostat("nama_10r_2gdp")
GDP_PPS_2018 <- GDP_PPS %>% filter(time == "2018-01-01")
PPS_HAB_2018 <- GDP_PPS_2018 %>% filter(unit == "PPS_HAB_EU27_2020")
GISCO_map <- get_eurostat_geospatial(nuts_level = 2)
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>%
mutate(cat = cut_to_classes(values, n=10, decimals=1))
ggplot(GDP_PPS_2018.sf, aes(fill=cat2)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in % of the EU27 (from 2020) average]",
fill="PPS_HAB_EU27_2020") + theme_light()
ggplot(GDP_PPS_2018.sf, aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in % of the EU27 (from 2020) average]",
fill="PPS_HAB_EU27_2020") + theme_light()
library(eurostat)
library(tidyverse)
library(ggplot2)
fertility <- get_eurostat("tgs00100") %>%
+     filter(time == "2014-01-01") %>%
+     mutate(cat = cut_to_classes(values, n=7, decimals=1))
mapdata <- get_eurostat_geospatial(nuts_level = 2) %>% right_join(fertility)
ggplot(mapdata, aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Fertility rate, by NUTS-2 regions, 2014", subtitle="Avg. number of live births per woman", fill="Total fertility rate(%)") +
theme_light()
fertility <- get_eurostat("tgs00100")
View(fertility)
fert <-  fertility %>% filter(time == "2018-01-01") %>%  mutate(cat = cut_to_classes(values, n=7, decimals=1))
View(fert)
fertility_2018 <-  fertility %>% filter(time == "2018-01-01") %>%  mutate(cat = cut_to_classes(values, n=7, decimals=1))
View(fertility_2018)
rm(fert)
mapdata <- get_eurostat_geospatial(nuts_level = 2) %>% right_join(fertility_2018)
View(mapdata)
class(mapdata)
View(mapdata)
ggplot(mapdata, aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Fertility rate, by NUTS-2 regions, 2018", subtitle="Avg. number of live births per woman", fill="Total fertility rate(%)") +
theme_light()
#
library(tidyverse)
library(giscoR)
library(sf)
library(eurostat)
library(cartography)
# Regions
nuts2 <- gisco_get_nuts(year = "2016", epsg = "3035", resolution = "10", nuts_level = "2")
# Countries
countries <- gisco_get_countries(year = "2016", epsg = "3035", resolution = "10")
plot(st_geometry(countries), lwd = 0.25, col = NA, add = TRUE)
plot(st_geometry(countries), col = "#E0E0E0", lwd = 0.1, bg = "#C6ECFF",
xlim = c(2300000, 7050000),ylim = c(1390000, 5400000))
plot(st_geometry(nuts2), col = "#E0E0E0", lwd = 0.1, bg = "#C6ECFF",
xlim = c(2300000, 7050000),ylim = c(1390000, 5400000))
plot(st_geometry(countries))
plot(st_geometry(nuts2))
View(nuts2)
# Datos a representar
GDP <- get_eurostat("nama_10r_2gdp")
GDP_2018 <- GDP[GDP$time == "2018-01-01", ]
View(GDP)
PPS_HAB_2018 <- GDP_2018[GDP_2018$unit == "PPS_HAB_EU27_2020", ]
View(PPS_HAB_2018)
nuts2.sf <- merge(nuts2, PPS_HAB_2018, by.x = "NUTS_ID", by.y = "geo", all.x = TRUE)
# MAP
# Prepare mapping
br <- getBreaks(nuts2.sf$values, method = "quantile")
pal <-hcl.colors(n = (length(br) - 1), palette = "RdYlBu", alpha = 0.75, rev = TRUE)
# Plot
opar <- par(no.readonly = TRUE)
par(mar = c(2, 2, 2, 2))
plot(st_geometry(countries), col = "#E0E0E0", lwd = 0.1, bg = "#C6ECFF",
xlim = c(2300000, 7050000),ylim = c(1390000, 5400000))
choroLayer(nuts2.sf, var = "values", border = NA, breaks = br, col = pal, legend.pos = "n", colNA = "#E0E0E0", add = TRUE)
# Borders
plot(st_geometry(countries), lwd = 0.25, col = NA, add = TRUE)
# Legend
legendChoro( pos = "topright",
title.txt = "PPS_HAB\n(% EU27_2020)",
breaks = c("", format(round((br), 1), big.mark = ",")[-c(1, length(br))], ""),
col = pal,
nodata = T,
nodata.txt = "n.d.",
nodata.col = "#E0E0E0",
frame = TRUE)
# Layers
layoutLayer(title = "Gross domestic product , Purchasing power standard (PPS) per inhabitant in percentage of the EU average, 2018",
scale = 1000, col = pal[3], sources = gisco_attributions(), author = "")
#
# MAP
# Prepare mapping
br <- getBreaks(nuts2.sf$values, method = "quantile")
pal <-hcl.colors(n = (length(br) - 1), palette = "RdYlBu", alpha = 0.75)
# Plot
opar <- par(no.readonly = TRUE)
par(mar = c(2, 2, 2, 2))
plot(st_geometry(countries), col = "#E0E0E0", lwd = 0.1, bg = "#C6ECFF",
xlim = c(2300000, 7050000),ylim = c(1390000, 5400000))
choroLayer(nuts2.sf, var = "values", border = NA, breaks = br, col = pal, legend.pos = "n", colNA = "#E0E0E0", add = TRUE)
# Borders
plot(st_geometry(countries), lwd = 0.25, col = NA, add = TRUE)
# Legend
legendChoro( pos = "topright",
title.txt = "PPS_HAB\n(% EU27_2020)",
breaks = c("", format(round((br), 1), big.mark = ",")[-c(1, length(br))], ""),
col = pal,
nodata = T,
nodata.txt = "n.d.",
nodata.col = "#E0E0E0",
frame = TRUE)
# Layers
layoutLayer(title = "Gross domestic product , Purchasing power standard (PPS) per inhabitant in percentage of the EU average, 2018",
scale = 1000, col = pal[3], sources = gisco_attributions(), author = "")
#
library(eurostat)
library(tidyverse)
GDP_PPS <- get_eurostat("nama_10r_2gdp")
GDP_PPS_2018 <- GDP_PPS %>% filter(time == "2018-01-01")
PPS_HAB_2018 <- GDP_PPS_2018 %>% filter(unit == "PPS_HAB_EU27_2020")
GISCO_map <- get_eurostat_geospatial(nuts_level = 2)
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>%
mutate(cat = cut_to_classes(values, n=10, decimals=1))
ggplot(GDP_PPS_2018.sf, aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in % of the EU27 (from 2020) average]",
fill="PPS_HAB_EU27_2020") + theme_light()
ggplot(GDP_PPS_2018.sf, aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") +
geom_sf(color=alpha("white",1/3), alpha = .6) +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
ggplot(GDP_PPS_2018.sf, aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
?scale_fill_brewer
ggplot(GDP_PPS_2018.sf, aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value="E0E0E0") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
ggplot(GDP_PPS_2018.sf, aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
View(GDP_PPS_2018.sf)
ggplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat == "No data"], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
gplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat == "No data",], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
ggplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat == "No data",], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
ggplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat != "No data",], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>%
mutate(cat = cut_to_classes(values, n=7, decimals=0))
ggplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat != "No data",], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>%
mutate(cat = cut_to_classes(values, n=5, decimals=0))
ggplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat != "No data",], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
DP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>%
mutate(cat = cut_to_classes(values, n=6, decimals=0))
ggplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat != "No data",], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
library(eurostat)
library(tidyverse)
GDP_PPS <- get_eurostat("nama_10r_2gdp")
GDP_PPS_2018 <- GDP_PPS %>% filter(time == "2018-01-01")
PPS_HAB_2018 <- GDP_PPS_2018 %>% filter(unit == "PPS_HAB_EU27_2020")
GISCO_map <- get_eurostat_geospatial(nuts_level = 2)
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>%
mutate(cat = cut_to_classes(values, n=6, decimals=0))
ggplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat != "No data",], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
library(eurostat)
library(tidyverse)
GDP_PPS <- get_eurostat("nama_10r_2gdp")
GDP_PPS_2018 <- GDP_PPS %>% filter(time == "2018-01-01")
PPS_HAB_2018 <- GDP_PPS_2018 %>% filter(unit == "PPS_HAB_EU27_2020")
GISCO_map <- get_eurostat_geospatial(nuts_level = 2)
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>%
mutate(cat = cut_to_classes(values, n=6, decimals=0))
View(GDP_PPS_2018.sf)
ggplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat != "No data",], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>%
mutate(cat = cut_to_classes(values, n=7, decimals=0))
ggplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat != "No data",], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>%
mutate(cat = cut_to_classes(values, n=9, decimals=0))
ggplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat != "No data",], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
GDP_PPS_2018.sf <- merge(GISCO_map, PPS_HAB_2018, by.x = "geo", by.y = "geo", all.x = TRUE) %>%
mutate(cat = cut_to_classes(values, n=10, decimals=0))
ggplot(GDP_PPS_2018.sf[GDP_PPS_2018.sf$cat != "No data",], aes(fill=cat)) + scale_fill_brewer(palette = "RdYlBu", na.value = "grey50") + geom_sf() +
xlim(c(-12,44)) + ylim(c(33,70)) +
labs(title="Regional GDP, by NUTS 2 regions, 2018", subtitle="[PPS per inhabitant in percentage of the EU27 (from 2020) average]",
fill="PPS_HAB\n(% EU27_2020)")
