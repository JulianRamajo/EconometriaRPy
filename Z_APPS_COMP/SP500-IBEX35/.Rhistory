theme_minimal()
plot
View(avg_return)
save.image(file = "SP500.RData")
avg_return = avg_return %>%
mutate(Indicator = case_when(symbol %in% c('MRNA') ~ "Moderna", symbol %in% c('DISCA', 'DISCK') ~ "Discovery (Series A & C)",
TRUE ~ "The Rest of the SP500"))
plot = avg_return %>% ggplot(aes(avg_Return, Volatility, color = Indicator))+
geom_text(aes(label = symbol), size = 3)+
labs(title = "Average Return vs Volatility in SP500 over Last 6 Months", x = "Average Return", subtitle = "Data Source: Yahoo Finance")+
theme_minimal()
plot
View(tickers_df_plus)
View(daily_sector)
View(avg_return)
tickers_df_plus %>%
filter(security == 'Moderna') %>%
ggplot(aes(date, adjusted))+
geom_line()
tickers_df_plus %>%
filter(security == 'Moderna') %>%
ggplot(aes(date, adjusted))+
labs(title = "Price data for the Moderna ticker", subtitle = "Data Source: Yahoo Finance")+
geom_line()
symbols = c('DISCA', 'DISCK')
Discovery = tq_get(symbols, from = '2017/01/01')
Discovery %>%
ggplot(aes(date, adjusted))+
geom_line()+
geom_smooth(method = 'lm', alpha = 0.3)+
facet_wrap(~symbol)+
theme_classic()
symbols = c('MRNA')
Moderna = tq_get(symbols, from = '2017/01/01')
Moderna %>%
ggplot(aes(date, adjusted))+
geom_line()+
geom_smooth(method = 'lm', alpha = 0.3)+
facet_wrap(~symbol)+
theme_classic()
Moderna %>%
ggplot(aes(date, adjusted))+
geom_line()+
facet_wrap(~symbol)+
theme_classic()
tickers_df_plus %>%
filter(symbol %in% c('DISCA', 'DISCK')) %>%
ggplot(aes(date, adjusted))+
geom_point(alpha = 0.3, color = 'black')+
geom_line()+
facet_wrap(~symbol)+
theme_classic()
# Recent prices (6 months)
tickers_df_plus %>%
filter(symbol %in% c('DISCA', 'DISCK')) %>%
ggplot(aes(date, adjusted))+
geom_point(alpha = 0.3, color = 'black')+
geom_line()+
facet_wrap(~symbol)+
labs(title = "Price data for the Discovery tickers", subtitle = "Data Source: Yahoo Finance")+
theme_classic()
library(plotly)
p <- plot_ly(avg_return, x = ~avg_Return, y = ~Volatility, type = 'scatter',
mode = 'text', text = ~symbol, textposition = 'middle right',
color = ~Indicator, colors = 'Set1',
textfont = list(size = 10)) %>%
layout(title = 'Average Return vs Volatility in SP500 over Last 6 Months',
xaxis = list(title = 'Averaage Return', zeroline = FALSE),
yaxis = list(title = 'Volatility'))
p
hardware = c('Intel Corp.', 'Advanced Micro Devices Inc', 'Nvidia Corporation')
tickers_df_plus %>%
filter(security %in% hardware) %>%
select(date, adjusted, security) %>%
ggplot(aes(date, adjusted))+
geom_point()+
geom_smooth()+
theme_classic()+
facet_wrap(~security, scales = 'free_y')
View(tickers_df_plus)
rlang::last_error()
hardware = c('Intel Corp.', 'Advanced Micro Devices Inc', 'Nvidia Corporation')
tickers_df_plus %>%
filter(security %in% hardware) %>%
select(date, adjusted, security) %>%
ggplot(aes(date, adjusted))+
geom_point()+
geom_smooth()+
theme_classic()
avg_return %>% tail(25) %>% ggplot(aes(reorder(security, avg_Return), avg_Return, fill = avg_Return))+
geom_col()+
coord_flip()+
labs(title = "Lowest Average Returns in SP500 over Last 6 Months", x = "Security", y = "Average Return")+
theme_classic()+
theme(legend.position="none")
avg_return %>% head(25) %>% ggplot(aes(reorder(security, -avg_Return), avg_Return, fill = avg_Return))+
geom_col()+
coord_flip()+
labs(title = "Highest Average Returns in SP500 over Last 6 Months", x = "Security", y = "Average Return")+
theme_classic()+
theme(legend.position="none")
ticker = "GOOGL"
tickers_df %>%
filter(symbol == !!ticker) %>%
ggplot(aes(date, adjusted))+
geom_line()
ticker = "GOOGL"
tickers_df_plus %>%
filter(symbol == !!ticker) %>%
ggplot(aes(date, adjusted))+
geom_line()
daily_sector %>% group_by(gics_sector) %>% summarise(Mean_Return = mean(daily.returns)) %>%
ggplot(aes(reorder(gics_sector, -Mean_Return), Mean_Return, fill = Mean_Return))+
geom_col()+
coord_flip()+
theme_classic()+
theme(legend.position="none")+
labs(title = "Average Return by Sector Over Last Month", y = "Mean Return", x = "GICS Sector")
plot + facet_wrap(~gics_sector, ncol = 3)
plot = avg_return %>% ggplot(aes(avg_Return, Volatility))+
geom_text(aes(label = symbol), size = 3)+
labs(title = "Average Return vs Volatility in SP500 over Last 6 Months", x = "Average Return", subtitle = "Data Source: Yahoo Finance")+
theme_minimal()
plot
plot + facet_wrap(~gics_sector, ncol = 3)
Rows = dim(tickers_df_plus)[1]
Columns = dim(tickers_df_plus)[2]
dimensions = data.frame(Rows, Columns)
print(dimensions)
avg_return %>% head(n=25)
avg_return %>% tail(n=25)
daily_sector %>% group_by(gics_sector) %>% summarise(Mean_Return = mean(daily.returns)) %>%
ggplot(aes(reorder(gics_sector, -Mean_Return), Mean_Return, fill = Mean_Return))+
geom_col()+
coord_flip()+
theme_classic()+
theme(legend.position="none")+
labs(title = "Average Return by Sector Over Last Month", y = "Mean Return", x = "GICS Sector")
plot = avg_return %>% ggplot(aes(avg_Return, Volatility))+
geom_text(aes(label = symbol), size = 3)+
labs(title = "Average Return vs Volatility in SP500 over Last 6 Months", x = "Average Return", subtitle = "Data Source: Yahoo Finance")+
theme_minimal()
plot
daily_sector %>% group_by(gics_sector) %>% summarise(Mean_Return = mean(daily.returns)) %>%
ggplot(aes(reorder(gics_sector, -Mean_Return), Mean_Return, fill = Mean_Return))+
geom_col()+
coord_flip()+
theme_classic()+
theme(legend.position="none")+
labs(title = "Average Return by Sector Over Last Month", y = "Mean Return", x = "GICS Sector")
plot2 = avg_return %>% ggplot(aes(avg_Return, Volatility))+
geom_text(aes(label = symbol), size = 3)+
labs(title = "Average Return vs Volatility in SP500 over Last 6 Months", x = "Average Return", subtitle = "Data Source: Yahoo Finance")+
theme_minimal()
plot2 + facet_wrap(~gics_sector, ncol = 3)
# for scraping
library(rvest)
# blanket import for core tidyverse packages
library(tidyverse)
# tidy financial analysis
library(tidyquant)
# tidy data cleaning functions
library(janitor)
save current system date to a variable
today <- Sys.Date()
# subtract 6 months from the current date
date = today %m+% months(-6)
print(date)
# pass IBEX35 ticker ^IBEX to tq_get function
one_ticker = tq_get("^IBEX", from = date)
one_ticker %>%
head()
one_ticker %>%
tail()
View(one_ticker)
rm(one_ticker)
# Pass IBEX35 ticker ^IBEX to tq_get function
IBEX35_ticker = tq_get("^IBEX", from = date)
IBEX35_ticker %>%
head()
IBEX35_ticker %>%
tail()
# Extract and visualize one of the assets raw prices over time
ticker = "^IBEX"
IBEX35_ticker %>%
filter(symbol == !!ticker) %>%
ggplot(aes(date, adjusted))+
geom_line()
View(IBEX35_ticker)
# get the URL for the wikipedia page with all IBEX35 symbols
url <- "https://en.wikipedia.org/wiki/IBEX_35"
# use that URL to scrape the SP500 table using rvest
tickers <- url %>%
# read the HTML from the webpage
read_html() %>%
# to get table
html_nodes(xpath='//*[@id="mw-content-text"]/div[1]/table[2]') %>%
html_table()
View(tickers)
IBEX35_tickers <- tickers[[1]]
View(IBEX35_tickers)
class(IBEX35_tickers)
class(IBEX35_tickers$Ticker)
class(IBEX35_tickers$Weighting)
symbols = IBEX35_tickers$Ticker
# define a function that retunrs OHLC data with the ticker name
get_symbols = function(ticker = "ANA"){
df = tq_get(ticker, from = date)  %>%  mutate(symbol = rep(ticker, length(date)))
return(df)
}
tickers_df = map(symbols, get_symbols) %>% bind_rows()
ANA = tq_get(ticker, from = date)  %>%  mutate(symbol = rep(ticker, length(date)))
ANA = tq_get(ticker, from = date)
ANA_data = tq_get("ANA", from = date)
#create a list of tickers
IBEX35_tickers <- tickers[[1]]
IBEX35_tickers = IBEX35_tickers %>% mutate(TRUE ~ as.character(Ticker))
IBEX35_tickers <- tickers[[1]]
IBEX35_tickers = IBEX35_tickers %>% mutate(Ticker = case_when(TRUE ~ as.character(Ticker)))
symbols = IBEX35_tickers$Ticker
get_symbols = function(ticker = "ANA"){
df = tq_get(ticker, from = date)  %>%  mutate(symbol = rep(ticker, length(date)))
return(df)
}
tickers_df = map(symbols, get_symbols) %>% bind_rows()
get_symbols = function(ticker = "ANA"){
df = tq_get(ticker, from = date)  %>%  mutate(symbol = rep(ticker, length(date)))
return(df)
}
ANA_ticker = tq_get("ANA", from = date)
IBEX35_ticker = tq_get("^IBEX", from = date)
# for scraping
library(rvest)
# blanket import for core tidyverse packages
library(tidyverse)
# tidy financial analysis
library(tidyquant)
# tidy data cleaning functions
library(janitor)
save current system date to a variable
today <- Sys.Date()
# subtract 6 months from the current date
date = today %m+% months(-6)
print(date)
# Pass IBEX35 ticker ^IBEX to tq_get function
IBEX35_ticker = tq_get("^IBEX", from = date)
IBEX35_ticker %>%
head()
IBEX35_ticker %>%
tail()
# Extract and visualize one of the assets raw prices over time
ticker = "^IBEX"
IBEX35_ticker %>%
filter(symbol == !!ticker) %>%
ggplot(aes(date, adjusted))+
geom_line()
View(ANA)
View(IBEX35_tickers)
# Pass IBEX35 ticker ^IBEX to tq_get function
ANA_data= tq_get("ANA", from = date)
ANA_data= %>%
head()
ANA_data= %>%
tail()
# Extract and visualize one of the assets raw prices over time
ticker = "ANA"
ANA_data= %>%
filter(Ticker == !!ticker) %>%
ggplot(aes(date, adjusted))+
geom_line()
View(IBEX35_tickers)
# Pass IBEX35 ticker ^IBEX to tq_get function
ANA_data= tq_get("ANA.MC", from = date)
ANA_data= %>%
head()
ANA_data= %>%
tail()
IBEX35_data= tq_get("^IBEX", from = date)
View(IBEX35_data)
IBEX35_dat  <-  tq_get("^IBEX", from = date)
View(IBEX35_data)
View(IBEX35_dat)
rm(IBEX35_dat)
rm(IBEX35_data)
rm(ANA_ticker)
rm(ANA_data)
rm(ANA)
ANA_dat  <-  tq_get("ANA", from = date)
View(ANA_dat)
ANA_data  <-  tq_get("ANA.MC", from = date)
View(ANA_data)
url <- "https://finance.yahoo.com/quote/%5EIBEX/components?p=%5EIBEX"
# use that URL to scrape the SP500 table using rvest
symbols <- url %>%
# read the HTML from the webpage
read_html() %>%
# to get table
html_nodes(xpath='//*[@id="Col1-0-Components-Proxy"]/section') %>%
html_table()
View(symbols)
View(symbols)
IBEX35_symbols <- symbols [[1]]
View(IBEX35_symbols)
View(IBEX35_symbols)
View(IBEX35_symbols)
View(IBEX35_symbols)
#create a list of tickers
IBEX35_symbols <- symbols [[1]] %>% select(Symbol, Company_Name)
View(IBEX35_symbols)
View(symbols)
#create a list of tickers
IBEX35_symbols <- symbols [[1]] %>% select(symbol, company_name)
View(symbols)
IBEX35_symbols <- symbols [[1]]
View(IBEX35_symbols)
View(IBEX35_symbols)
#create a list of tickers
IBEX35_Top30 <- symbols [[1]]
View(IBEX35_Top30)
View(IBEX35_Top30)
symbols = IBEX35_Top30$Symbol
get_symbols = function(ticker = "CABK.MC"){
df = tq_get(ticker, from = date)  %>%  mutate(symbol = rep(ticker, length(date)))
return(df)
}
tickers_df = map(symbols, get_symbols) %>% bind_rows()
View(tickers_df)
View(IBEX35_tickers)
View(IBEX35_ticker)
View(tickers_df)
View(IBEX35_Top30)
tickers_df_plus = tickers_df %>%
# left join with wikipedia data
left_join(IBEX35_Top30, by = c('symbol' = 'Symbol')) %>%
# make names R compatible
clean_names() %>%
# keep only the columns we need
#select(symbol:security, gics_sector, gics_sub_industry)
tickers_df_plus = tickers_df %>%
# left join with wikipedia data
left_join(IBEX35_Top30, by = c('symbol' = 'Symbol')) %>%
# make names R compatible
clean_names() #%>%
# keep only the columns we need
#select(symbol:security, gics_sector, gics_sub_industry)
View(tickers_df_plus)
tickers_df_plus = tickers_df %>%
# left join with wikipedia data
left_join(IBEX35_Top30, by = c('symbol' = 'Symbol')) %>%
# make names R compatible
clean_names() %>%
# keep only the columns we need
select(symbol:company_name)
View(tickers_df_plus)
tickers_df_plus %>% head()
tickers_df_plus %>% tail()
tickers_df_plus %>%
# select just the symbol column
select(symbol)%>%
# get the distinct values
distinct()%>%
# count the distinct values
count() %>%
# we can use select to rename columns
select("Total Number of Tickers" = n)
Rows = dim(tickers_df_plus)[1]
Columns = dim(tickers_df_plus)[2]
dimensions = data.frame(Rows, Columns)
print(dimensions)
View(tickers_df_plus)
ticker = "CABK.MC"
tickers_df_plus %>%
filter(symbol == !!ticker) %>%
ggplot(aes(date, adjusted))+
geom_line()
ticker = "CABK.MC"
tickers_df_plus %>%
filter(symbol == !!ticker) %>%
ggplot(aes(date, adjusted))+
facet_wrap(~symbol)+
geom_line()
ticker = "CABK.MC"
tickers_df_plus %>%
filter(symbol == !!ticker) %>%
ggplot(aes(date, adjusted))+
facet_wrap(~company_name)+
geom_line()
View(tickers_df)
daily_returns = tickers_df_plus %>% group_by(company_name, symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = periodReturn,
period     = "daily")
View(daily_returns)
View(daily_returns)
daily_returns$daily.returns <- (daily_returns$daily.returns)*100
View(daily_returns)
rm(IBEX35_symbols)
View(tickers)
View(tickers)
rm(ANA_dat)
rm(ANA_data)
save.image(file = "IBEX35.RData")
View(daily_returns)
View(daily_returns)
avg_return = daily_returns %>%
group_by(company_name, symbol) %>%
summarise(avg_Return = round(mean(daily.returns), 4), Volatility = round(sd(daily.returns), 4)) %>%
arrange(desc(avg_Return), desc(Volatility))
avg_return %>% head(n=25)
avg_return %>% tail(n=25)
avg_return %>% head(25) %>% ggplot(aes(reorder(company_name, -avg_Return), avg_Return, fill = avg_Return))+
geom_col()+
coord_flip()+
labs(title = "Highest Average Returns in IBEX35-Top30 over Last 6 Months", x = "Security", y = "Average Return")+
theme_classic()+
theme(legend.position="none")
avg_return %>% tail(25) %>% ggplot(aes(reorder(company_name, avg_Return), avg_Return, fill = avg_Return))+
geom_col()+
coord_flip()+
labs(title = "Lowest Average Returns in IBEX35-Top30 over Last 6 Months", x = "Security", y = "Average Return")+
theme_classic()+
theme(legend.position="none")
plot = avg_return %>% ggplot(aes(avg_Return, Volatility))+
geom_text(aes(label = symbol), size = 3)+
labs(title = "Average Return vs Volatility in IBEX35-Top30 over Last 6 Months", x = "Average Return", subtitle = "Data Source: Yahoo Finance")+
theme_minimal()
plot
View(avg_return)
avg_return = avg_return %>%
mutate(Indicator = case_when(symbol %in% c('FDR.MC') ~ "Fluidra", symbol %in% c('PHM.MC') ~ "Pharma Mar",
TRUE ~ "The Rest of the IBEX35-Top30"))
plot2 = avg_return %>% ggplot(aes(avg_Return, Volatility, color = Indicator))+
geom_text(aes(label = symbol), size = 3)+
labs(title = "Average Return vs Volatility in IBEX35-Top30 over Last 6 Months", x = "Average Return", subtitle = "Data Source: Yahoo Finance")+
theme_minimal()
plot2
avg_return = avg_return %>%
mutate(Indicator = case_when(symbol %in% c('PHM.MC') ~ "Pharma Mar", symbol %in% c('FDR.MC') ~ "Fluidra", symbol %in% c('PHM.MC') ~ "Pharma Mar",
TRUE ~ "The Rest of the IBEX35-Top30"))
plot2 = avg_return %>% ggplot(aes(avg_Return, Volatility, color = Indicator))+
geom_text(aes(label = symbol), size = 3)+
labs(title = "Average Return vs Volatility in IBEX35-Top30 over Last 6 Months", x = "Average Return", subtitle = "Data Source: Yahoo Finance")+
theme_minimal()
plot2
library(plotly)
p3 <- plot_ly(avg_return, x = ~avg_Return, y = ~Volatility, type = 'scatter',
mode = 'text', text = ~symbol, textposition = 'middle right',
color = ~Indicator, colors = 'Set1',
textfont = list(size = 10)) %>%
layout(title = 'Average Return vs Volatility in IBEX35-Top30 over Last 6 Months',
xaxis = list(title = 'Average Return', zeroline = FALSE),
yaxis = list(title = 'Volatility'))
p3
View(avg_return)
# The loser: Pharma Mar, S.A.
# Long-run (5 years) evolution of prices
symbols = c('PHM.MC')
PharmaMar = tq_get(symbols, from = '2017/01/01')
PharmaMar %>%
ggplot(aes(date, adjusted))+
geom_line()+
geom_smooth(method = 'lm', alpha = 0.3)+
facet_wrap(~symbol)+
labs(title = "Price data of Pharma Mar", subtitle = "Data Source: Yahoo Finance")+
theme_classic()
# Recent prices (6 months)
tickers_df_plus %>%
filter(symbol %in% c('PHM.MC')) %>%
ggplot(aes(date, adjusted))+
geom_point(alpha = 0.3, color = 'black')+
geom_line()+
facet_wrap(~symbol)+
labs(title = "Price data of Pharma Mar", subtitle = "Data Source: Yahoo Finance")+
theme_classic()
# The loser: Pharma Mar, S.A.
# Long-run (5 years) evolution of prices
symbols = c('PHM.MC')
PharmaMar = tq_get(symbols, from = '2017/01/01')
PharmaMar %>%
ggplot(aes(date, adjusted))+
geom_line()+
facet_wrap(~symbol)+
labs(title = "Price data of Pharma Mar", subtitle = "Data Source: Yahoo Finance")+
theme_classic()
# Recent prices (6 months)
tickers_df_plus %>%
filter(symbol %in% c('PHM.MC')) %>%
ggplot(aes(date, adjusted))+
geom_point(alpha = 0.3, color = 'black')+
geom_line()+
facet_wrap(~symbol)+
labs(title = "Price data of Pharma Mar", subtitle = "Data Source: Yahoo Finance")+
theme_classic()
# The winner: Fluidra, S.A.
# Long-run (5 years) evolution of prices
symbols = c('FDR.MC')
Moderna = tq_get(symbols, from = '2017/01/01')
Moderna %>%
ggplot(aes(date, adjusted))+
geom_line()+
facet_wrap(~symbol)+
labs(title = "Price data of Fluidra", subtitle = "Data Source: Yahoo Finance")+
theme_classic()
# Recent prices (6 months)
tickers_df_plus %>%
filter(symbol %in% c('FDR.MC')) %>%
ggplot(aes(date, adjusted))+
geom_point(alpha = 0.3, color = 'black')+
geom_line()+
facet_wrap(~symbol)+
labs(title = "Price data of Fluidra", subtitle = "Data Source: Yahoo Finance")+
theme_classic()
