dat <- read.csv("http://bit.ly/2P5gTw4")
View(dat)
dat <- subset(dat, store_exp > 0 & online_exp > 0)
View(dat)
install.packages(c("actuar", "autoReg", "bbotk", "collapse", "covr", "ctmm", "data.tree", "fastR2", "ggformula", "gutenbergr", "httr2", "leaflet", "lifecycle", "lintr", "lme4", "Matrix", "matrixStats", "mclust", "mosaic", "NNS", "OasisR", "OpenMx", "PBSmodelling", "pins", "plotrix", "pracma", "PReMiuM", "ranger", "Rdpack", "refund", "Rfast", "robustlmm", "spatialsample", "stacks", "stringi", "stringr", "texreg", "text2vec", "textrecipes", "tsutils", "wildlifeDI"))
install.packages(c("arrow", "bslib", "CARBayes", "ctmm", "DescTools", "dplyr", "EGAnet", "epiR", "finalfit", "GGally", "ggmap", "ggthemes", "GPArotation", "gtools", "htmlwidgets", "jqr", "lamW", "MAPA", "mapmisc", "mapsf", "mclust", "mcmc", "mlr3", "mlr3learners", "mlr3tuning", "mmrm", "OasisR", "pak", "pls", "R.utils", "rapidoc", "RODBC", "rpostgis", "shiny", "sodium", "spatialEco", "textrecipes", "TMB", "vetiver", "whitebox"))
install.packages("arrow")
install.packages(c("arrow", "crosstalk", "ctmm", "deldir", "fixest", "geostan", "GGally", "htmlwidgets", "msm", "OasisR", "pdynmc", "QuickJSR", "shinybusy", "spatialreg", "spdep", "stringi", "tinytex", "webutils"))
install.packages("spatstat")
install.packages(c("arrow", "bslib", "cluster", "ctmm", "dbscan", "deSolve", "diptest", "dotCall64", "expm", "extraDistr", "fastICA", "foreign", "gam", "gee", "GeneralizedHyperbolic", "geos", "ggdist", "git2r", "glmmML", "gmp", "haven", "insight", "interp", "landscapemetrics", "libgeos", "lpSolveAPI", "Matrix", "mgwrsar", "mlr3tuning", "msm", "mvtnorm", "ncdf4", "nleqslv", "nlme", "NNS", "OasisR", "OpenMx", "pdynmc", "PMCMRplus", "rgl", "rjags", "RJSONIO", "robustbase", "RODBC", "scales", "segmented", "seriation", "signal", "SkewHyperbolic", "smam", "sp", "spatstat.random", "stochvol", "surveillance", "tgp", "TMB", "trajectories", "trajr", "TTR", "units", "wk", "XML"))
install.packages(c("arrow", "BayesFactor", "bookdown", "bslib", "cluster", "cpp11", "ctmm", "dbscan", "DescTools", "deSolve", "diptest", "dotCall64", "etwfe", "expm", "extraDistr", "fastICA", "foreign", "gam", "gee", "geos", "glmmML", "gmp", "haven", "iBreakDown", "interp", "lamW", "landscapemetrics", "libgeos", "lpSolveAPI", "Matrix", "mcmcsae", "mgwrsar", "mlr3tuning", "multicool", "mvtnorm", "ncdf4", "nlme", "NNS", "OasisR", "oce", "OpenMx", "PROJ", "rgl", "rjags", "rJava", "RJSONIO", "robustbase", "scales", "segmented", "seriation", "signal", "smam", "spatstat.random", "surveillance", "testthat", "tgp", "TMB", "trajectories", "trajr", "TTR", "units", "vars", "vctrs", "wk", "XML"))
install.packages(c("admisc", "av", "bbmle", "Bergm", "BGVAR", "checkmate", "collapse", "copula", "ctmm", "curl", "data.table", "DiceDesign", "DT", "e1071", "fansi", "fastmatrix", "gert", "ggiraph", "htmlwidgets", "httpuv", "jqr", "jsonlite", "later", "lightgbm", "markdown", "mboost", "mets", "mmrm", "nanoarrow", "network", "OasisR", "ordinal", "pcaPP", "progress", "RcppArmadillo", "refund", "report", "rgl", "riverdist", "rJava", "Rmpfr", "robust", "rpart", "RSQLite", "sass", "sets", "sna", "spacetime", "svglite", "tmvtnorm", "tseries", "V8", "vroom", "xgboost", "xml2"))
sessionInfo()
library(tseries)
data(EuStockMarkets)
View(EuStockMarkets)
dax <- diff(log(EuStockMarkets))[,"DAX"]
class(dax)
dax_garch <- garch(dax)
summary(dax_garch)
plot(dax.garch)
plot(dax_garch)
install.packages("mlr3verse")
install.packages(c("ads", "aod", "bbmle", "BGVAR", "bimets", "Boom", "brio", "cli", "clustMixType", "ctmm", "data.table", "dbmss", "desc", "filelock", "float", "frontiles", "gdtools", "geoR", "ggiraph", "ggside", "gslnls", "huxtable", "ICSOutlier", "igraph", "keyring", "klaR", "lpSolve", "mapping", "marginaleffects", "matrixStats", "memisc", "nanoarrow", "OasisR", "opdisDownsampling", "pak", "pingr", "pkgbuild", "PMCMRplus", "processx", "ragg", "recipes", "rgl", "rlas", "rmatio", "rnaturalearth", "s2", "sandwich", "seriation", "spBayes", "stringi", "tensorA", "timeDate", "TMB", "ucminf", "yaImpute", "yaml", "yulab.utils"))
library(reticulate)
# Lectura de librerÃ­as
import numpy as np
repl_python()
setwd("~/Quarto-GitHub")
