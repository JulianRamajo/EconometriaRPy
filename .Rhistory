.libPaths()
install.packages("garchx")
install.packages("garchmodels")
install.packages("IndexNumber")
install.packages(c("cli", "corrplot", "Ecfun", "mlr3misc", "multicool", "parallelly", "seriation", "sf"))
install.packages(c("cli", "datamods", "gargle", "ks", "mlr3misc", "MplusAutomation", "seriation", "sf", "slider", "testthat"))
library(readr)
PUB_VENTAS <- read_csv("~/Downloads/Ejercicios examen rafael hernandez galan/PUB_VENTAS.csv")
View(PUB_VENTAS)
class(PUB_VENTAS)
View(PUB_VENTAS)
mod_VENTAS <- lm(VENTAS ~ TV:RADIO, data=PUB_VENTAS)
summary(mod_VENTAS)
mod_VENTAS <- lm(VENTAS ~ TV*RADIO, data=PUB_VENTAS)
summary(mod_VENTAS)
library(lmtest)
resettest(mod_VENTAS, power = 2)
hist(mod_VENTAS$residuals)
library(moments)
skewness(mod_VENTAS$residuals)
kurtosis(mod_VENTAS$residuals)
jarque.test(mod_VENTAS$residuals)
densityPlot(mod_VENTAS$residuals)
library(car)
densityPlot(mod_VENTAS$residuals)
qqnorm(mod_VENTAS$residuals)
qqPlot(qqnorm(mod_VENTAS$residuals), distribution = "norm")
qqPlot(mod_VENTAS$residuals, distribution = "norm")
bgtest(formula(mod_VENTAS), data=PUB_VENTAS, studentize=T)
bgtest(formula(mod_VENTAS), data=PUB_VENTAS)
bptest(formula(mod_VENTAS), data=PUB_VENTAS, studentize=T)
spreadLevelPlot(mod_VENTAS)
bptest(formula(mod_VENTAS), varformula= TV*RADIO, data=PUB_VENTAS, studentize=T)
bptest(formula(mod_VENTAS), varformula= ~ TV*RADIO, data=PUB_VENTAS, studentize=T)
ncvTest(mod_VENTAS)
ncvTest(mod_VENTAS), var.formula=~ TV*RADIO, data=PUB_VENTAS)
ncvTest(mod_VENTAS, var.formula=~ TV*RADIO, data=PUB_VENTAS)
bptest(formula(mod_VENTAS), varformula= ~ TV*RADIO, data=PUB_VENTAS)
bptest(formula(mod_VENTAS), varformula= ~ TV*RADIO, data=PUB_VENTAS, studentize=F)
library(sandwich)
summary(mod_VENTAS, vcov. = vcovHC(mod_VENTAS, type="HC1") )
summary(mod_VENTAS)
coeftest(mod_VENTAS, vcov. = vcovHC(mod_VENTAS, type="HC1") )
summary( mod_sigma2 <- lm( log(mod_VENTAS$residuals^2) ~ TV*RADIO, data=PUB_VENTAS) )
S(mod_VENTAS)
sigma2 <-exp(mod_sigma2$fitted.values)
summary( mod_VENTAS_het <- lm( VENTAS ~ TV*RADIO, weights = 1/sigma2, data=PUB_VENTAS) )
S(mod_VENTAS)
library(effects)
plot(Effect("TV"),mod_VENTAS)
plot(Effect("TV",mod_VENTAS))
plot(Effect("RADIO",mod_VENTAS))
mod_VENTAS_0 <- lm(VENTAS ~ TV + RADIO, data=PUB_VENTAS)
summary(mod_VENTAS_0)
plot(Effect("TV",mod_VENTAS_0))
b <- coef(mod_VENTAS)
b
dVENTAS_dTV <- b[2] + b[4]*READIO
dVENTAS_dTV <- b[2] + b[4]*RADIO
attach(PUB_VENTAS)
dVENTAS_dTV <- b[2] + b[4]*RADIO
dVENTAS_dRADIO <- b[3] + b[4]*TV
scatterplot(dVENTAS_dTV, RADIO)
scatterplot(dVENTAS_dTV ~ RADIO)
scatterplot(dVENTAS_dRADIO ~ TV)
library(scatterplot3d)
scatterplot3d(TV,RADIO,VENTAS, main="3D Scatterplot")
install.packages("simplevis")
install.packages(c("esquisse", "rootSolve", "RPostgres", "sf"))
install.packages("gtrendsR")
install.packages("reshape2")
install.packages("ggplot2")
library(gtrendsR)
library(reshape2)
library(ggplot2)
ProgLang_trend <- gtrends(c("R econometrics", "Python econometrics"))
plot(ProgLang_trend)
install.packages(c("autostsm", "ggfortify", "googledrive", "pxweb", "Rcpp", "rootSolve", "RPostgres", "sf"))
View(ProgLang_trend)
ProgLang_trend[["interest_over_time"]][["hits"]]
View(ProgLang_trend[["interest_over_time"]])
ProgLang_trend[["interest_over_time"]]
install.packages(c("isoband", "sf", "spatstat.geom", "stochvol", "styler", "wk"))
library(gtrendsR)
library(reshape2)
library(ggplot2)
ProgLang_trend <- gtrends(c("R econometrics", "Python econometrics"))
plot(ProgLang_trend)
plot.ts(ProgLang_trend)
View(ProgLang_trend)
ProgLang_trend <- gtrends(c("R statistics", "Python statistics"))
plot(ProgLang_trend)
ProgLang_trend <- gtrends(c("R data science", "Python data science"))
plot(ProgLang_trend)
#
trend_4 <- gtrends(c("R data analysis", "Python data analysis"))
plot(trend_4)
trend_5 <- gtrends(c("R machine learning", "Python machine learning"))
plot(trend_5)
library(reticulate)
py_install("sktime")
setwd("~/Documents/GitHub/EconMetricsRPy")
miniconda_update()
py_available()
py_discover_config()
library(reticulate)
repl_python()
