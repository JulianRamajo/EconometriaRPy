geom_hline(yintercept = 0, color = palette_light()[[1]]) +
scale_y_continuous(labels = scales::percent) +
labs(title = "FANG Annual Returns", subtitle = "X", y = "Annual Returns", x = "") +
facet_wrap(~ symbol, ncol = 2, scales = "free_y") +
theme_tq() +
scale_fill_tq()
# Rendimientos diarios
FAANG_daily_returns <- FAANG_prices %>% group_by(symbol) %>%
tq_transmute(select = adjusted, mutate_fun = periodReturn, period = "daily", type  = "log")
FAANG_daily_returns
#
FAANG_daily_returns %>% ggplot(aes(x = date, y = daily.returns, fill = symbol)) + geom_col() +
geom_hline(yintercept = 0, color = palette_light()[[1]]) +
scale_y_continuous(labels = scales::percent) +
labs(title = "FAANG Daily Returns", subtitle = "(Log-returns)", y = "Daily Returns", x = "") +
facet_wrap(~ symbol, ncol = 2, scales = "free_y") +
theme_tq() +
scale_fill_tq()
#
FAANG_daily_returns %>% ggplot(aes(x = daily.returns, fill = symbol)) +
geom_density(alpha = 0.5) +
labs(title = "FAANG Daily LReturns",  subtitle = "(Log-returns)", x = "", y = "Density") +
theme_tq() +
scale_fill_tq() +
facet_wrap(~ symbol, ncol = 2)
# Librería timetk
FAANG_daily_returns %>%
group_by(symbol) %>%
plot_anomaly_diagnostics(date, daily.returns, .facet_ncol = 3, .interactive = FALSE)
#
# Regresiones por parejas (ejmplo: Amazon versus Netflix; Google versus Facebook)
#
FAANG_daily_returns %>%
mutate(price.index = 100 * cumprod(1 + daily.returns)) %>%
ggplot(aes(x = date, y = price.index, color = symbol)) +
geom_line(size = 1) +
labs(title = "FAANG Stock Prices" , subtitle = "2015-01-02 = 100") +
theme_tq() +
scale_color_tq()
#
FAANG_daily_returns_spread <- FAANG_daily %>%
tq_transmute(select = adjusted, mutate_fun = periodReturn, period = "daily", type = "log") %>%
pivot_wider(names_from = symbol, values_from = daily.returns)
#
FAANG_daily_returns_spread %>%
ggplot(aes(x = AMZN, y = NFLX)) +
geom_point(color = palette_light()[[1]], alpha = 0.5) +
geom_smooth(method = "lm") +
labs(title = "Visualizing Returns Relationship of Stock Pairs: Netflix versus Amazon", x = "Amazon", y = "Netflix") +
theme_tq()
# Reg. estándar
lm(NFLX ~ AMZN, data = FAANG_daily_returns_spread) %>%
summary()
# Reg. cambiante (rolling regression)
reg_fun <- function(data) {
coef(lm(NFLX ~ AMZN, data = timetk::tk_tbl(data, silent = TRUE)))
}
coef_pairs <- FAANG_daily_returns_spread %>%
tq_mutate(mutate_fun = rollapply,
width      = 90,
FUN        = reg_fun,
by.column  = FALSE,
col_rename = c("coef.0", "coef.1"))
coef_pairs
coef_pairs %>%
ggplot(aes(x = date, y = coef.1)) +
geom_line(size = 1, color = palette_light()[[1]]) +
geom_hline(yintercept = 0.7342, size = 1, color = palette_light()[[2]]) +
labs(title = "FB ~ AMZN: Visualizing Rolling Regression Slope Coefficient", x = "") +
theme_tq()
#
View(coef_pairs)
rm(list = ls())
library(tidyverse)
#
# Gráficas
#
plot(Q ~ P, xlab="P", ylab="Q")
plot(Q ~ Y, xlab="Y", ylab="Q")
scatter3D(x = P, y = Y, z = Q,
pch = 16, cex = 1.5, xlab = "Precio", ylab = "Renta",
zlab = "Gasto  per cápita", clab = c("Renta"),
main = "Demanda familiar de carne", ticktype = "detailed")
#
# Regresión no lineal
#
nonlin_mod <- nls(Q ~  c1 + c2*P + c3*(Y^c4), start = list(c1=5, c2=-0.5, c3=0.001, c4=3))
summary(nonlin_mod)
#
set.seed(10131985)
reg_nl.boot <- Boot(nonlin_mod, R=999)
summary(reg_nl.boot)
confint(reg_nl.boot)
hist(reg_nl.boot, layout=c(2, 2))
#
library(tidyverse)
library(alr4)
#
DEM_CARNE <- read_csv("DEM_CARNE.csv")
DEM_CARNE
attach(DEM_CARNE)
#
# Gráficas
#
plot(Q ~ P, xlab="P", ylab="Q")
plot(Q ~ Y, xlab="Y", ylab="Q")
scatter3D(x = P, y = Y, z = Q,
pch = 16, cex = 1.5, xlab = "Precio", ylab = "Renta",
zlab = "Gasto  per cápita", clab = c("Renta"),
main = "Demanda familiar de carne", ticktype = "detailed")
#
# Regresión no lineal
#
nonlin_mod <- nls(Q ~  c1 + c2*P + c3*(Y^c4), start = list(c1=5, c2=-0.5, c3=0.001, c4=3))
summary(nonlin_mod)
#
set.seed(10131985)
reg_nl.boot <- Boot(nonlin_mod, R=999)
summary(reg_nl.boot)
confint(reg_nl.boot)
hist(reg_nl.boot, layout=c(2, 2))
#
library(scatterplot3d)
scatterplot3d(DEM_CARNE$P, DEM_CARNE$Y, DEM_CARNE$Q, main="Scatterplot 3D DEMANDA-PRECIO-RENTA")
rm(list = ls())
#
library(tidyverse)
library(alr4)
#
DEM_CARNE <- read_csv("DEM_CARNE.csv")
DEM_CARNE
attach(DEM_CARNE)#
#
# Gráficas
#
plot(Q ~ P, xlab="P", ylab="Q")
plot(Q ~ Y, xlab="Y", ylab="Q")
#
library(scatterplot3d)
scatterplot3d(DEM_CARNE$P, DEM_CARNE$Y, DEM_CARNE$Q, main="Scatterplot 3D DEMANDA-PRECIO-RENTA")
#
# Regresión lineal
#
lin_mod <- lm(Q ~  c1 + c2*P + c3*(Y^c4), data=DEM_CARNE)
summary(lin_mod)
#
# Regresión no lineal
#
nonlin_mod <- nls(Q ~  c1 + c2*P + c3*(Y^c4), start = list(c1=5, c2=-0.5, c3=0.001, c4=3))
summary(nonlin_mod)
#
set.seed(10131985)
reg_nl.boot <- Boot(nonlin_mod, R=999)
summary(reg_nl.boot)
confint(reg_nl.boot)
hist(reg_nl.boot, layout=c(2, 2))
#
rm(list = ls())
#
library(tidyverse)
library(alr4)
#
DEM_CARNE <- read_csv("DEM_CARNE.csv")
#
# Gráficas
#
plot(Q ~ P, xlab="P", ylab="Q")
plot(Q ~ Y, xlab="Y", ylab="Q")
#
library(scatterplot3d)
scatterplot3d(DEM_CARNE$P, DEM_CARNE$Y, DEM_CARNE$Q, main="Scatterplot 3D DEMANDA-PRECIO-RENTA")
#
# Regresión lineal
#
lin_mod <- lm(Q ~  P + Y, data=DEM_CARNE)
summary(lin_mod)
#
# Regresión no lineal
#
nonlin_mod <- nls(Q ~  c1 + c2*P + c3*(Y^c4), start = list(c1=5, c2=-0.5, c3=0.001, c4=3), data=DEM_CARNE)
summary(nonlin_mod)
#
set.seed(10131985)
reg_nl.boot <- Boot(nonlin_mod, R=999)
summary(reg_nl.boot)
confint(reg_nl.boot)
hist(reg_nl.boot, layout=c(2, 2))
#
rm(list = ls())
#
library(tidyverse)
library(alr4)
#
DEM_CARNE <- read_csv("DEM_CARNE.csv")
#
# Gráficas
#
plot(Q ~ P, xlab="P", ylab="Q")
plot(Q ~ Y, xlab="Y", ylab="Q")
#
library(scatterplot3d)
scatterplot3d(DEM_CARNE$P, DEM_CARNE$Y, DEM_CARNE$Q, main="Scatterplot 3D DEMANDA-PRECIO-RENTA")
#
# Regresión lineal
#
lin_mod <- lm(Q ~  P + Y, data=DEM_CARNE)
summary(lin_mod)
#
# Regresión no lineal
#
nonlin_mod <- nls(Q ~  c1 + c2*P + c3*(Y^c4), start = list(c1=5, c2=-0.5, c3=0.001, c4=3), data=DEM_CARNE)
summary(nonlin_mod)
#
# Bootstrapping del modelo no lineal
#
set.seed(123456789)
reg_nl.boot <- Boot(nonlin_mod, R=999)
summary(reg_nl.boot)
confint(reg_nl.boot)
hist(reg_nl.boot, layout=c(2, 2))
#
rm(list = ls())
#
library(alr4)
#
segreg
help(segreg)
#
library(alr4)
#
help(segreg)
head(segreg)
tail(segreg)
#
plot(C ~ Temp, segreg, xlab="Temperatura media del mes (ºF)", ylab="Consumo de electricidad (KWH/día")
segm.reg <- nls(C ~ th0 + th1 * (pmax(0, Temp - gamma)), data=segreg, start=list(th0=70, th1=.5, gamma=40))
summary(segm.reg)
#
plot(C ~ Temp, segreg, xlab="Temperatura media (ºF)", ylab="Consumo de electricidad (KWH/día)")
x <- (0:90)
lines(x, predict(segm.reg, data.frame(Temp=x)))
# Bootstrapping del modelo
segm.reg.boot <- Boot(segm.reg, R=999)
summary(segm.reg.boot)
confint(segm.reg.boot)
hist(segm.reg.boot, layout=c(1, 3))
#
library(tidyverse)
library(alr4)
#
DEM_CARNE <- read_csv("DEM_CARNE.csv")
#
# Gráficas
#
plot(Q ~ P, xlab="P", ylab="Q")
plot(Q ~ Y, xlab="Y", ylab="Q")
#
library(scatterplot3d)
scatterplot3d(DEM_CARNE$P, DEM_CARNE$Y, DEM_CARNE$Q, main="Scatterplot 3D DEMANDA-PRECIO-RENTA")
#
# Regresión lineal
#
lin_mod <- lm(Q ~  P + Y, data=DEM_CARNE)
summary(lin_mod)
#
# Regresión no lineal
#
nonlin_mod <- nls(Q ~  c1 + c2*P + c3*(Y^c4), start = list(c1=5, c2=-0.5, c3=0.001, c4=3), data=DEM_CARNE)
summary(nonlin_mod)
#
# Bootstrapping del modelo no lineal
#
reg_nl.boot <- Boot(nonlin_mod, R=999)
summary(reg_nl.boot)
confint(reg_nl.boot)
hist(reg_nl.boot, layout=c(2, 2))
#
rm(list = ls())
#
library(tidyverse)
library(dynlm)
library(car)
library(lmtest)
library(performance)
#
SAV_USA <- read_csv("SAV_USA.csv")
AHORRO_RENTA_ts <- ts(SAV_USA[,2:3], start=c(1970), end = c(2005))
plot(AHORRO_RENTA_ts)
#
AH <- AHORRO_RENTA_ts[,"AH"]
Y <- AHORRO_RENTA_ts[,"Y"]
#
# Modelo A
S(dynlm_A <- dynlm(AH ~ L(AH, 1:2)))
#
# Modelo B
#
S(dynlm_B <- dynlm(AH ~ L(AH, 1:1) + L(Y, 0:0)))
#
# Contraste de Cox
#
coxtest(dynlm_A, dynlm_B)
#
#  Contraste J de Davidson y MacKinnon
#
jtest(dynlm_A, dynlm_B)
#
# Modelo anidado
#
S(dynlm_AB <- dynlm(AH ~ L(AH, 1:2)  + L(Y, 0:0)))
#
# Comparación de modelos (librería performance)
#
model_performance(dynlm_A)
model_performance(dynlm_B)
compare_performance(dynlm_A, dynlm_B, rank = TRUE)
plot(compare_performance(dynlm_A, dynlm_B, rank = TRUE))
#
View(AHORRO_RENTA_ts)
# Modelo A
summary(dynlm_A <- dynlm(AH ~ L(AH, 1:2)), window(AHORRO_RENTA_ts, start=1972, end = 1985))
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:1) + L(Y, 0:0)),  window(AHORRO_RENTA_ts, start=1972, end = 1985))
#
# Modelo A
summary(dynlm_A <- dynlm(AH ~ L(AH, 1:2)), window(AHORRO_RENTA_ts, start=1972, end = 2005))
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:1) + L(Y, 0:0)),  window(AHORRO_RENTA_ts, start=1972, end = 2005))
#
View(AHORRO_RENTA_ts)
#
AHORRO_RENTA_ts_1972_2005 <-window(AHORRO_RENTA_ts, start=1972, end = 2005)
#
# Modelo A
summary(dynlm_A <- dynlm(AH ~ L(AH, 1:2)), data = AHORRO_RENTA_ts_1972_2005)
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:1) + L(Y, 0:0)),  data = AHORRO_RENTA_ts_1972_2005)
#
View(AHORRO_RENTA_ts_1972_2005)
View(AHORRO_RENTA_ts)
View(AHORRO_RENTA_ts_1972_2005)
View(AHORRO_RENTA_ts)
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:1) + L(Y, 0:0)),  data = AHORRO_RENTA_ts_1972_2005)
View(SAV_USA)
View(AHORRO_RENTA_ts_1972_2005)
# Modelo A
summary(dynlm_A <- dynlm(AH ~ L(AH, 1:2)), data = AHORRO_RENTA_ts, start=1972)
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:1) + L(Y, 0:0)), data = AHORRO_RENTA_ts, start=1972)
#
# Modelo A
summary(dynlm_A <- dynlm(AH ~ L(AH, 1:2)), data = AHORRO_RENTA_ts, start=c(1972))
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:1) + L(Y, 0:0)), data = AHORRO_RENTA_ts, start=(1972))
#
rm(list = ls())
#
library(tidyverse)
library(dynlm)
library(car)
library(lmtest)
library(performance)
#
AHORRO_RENTA <- read_csv("SAV_USA.csv")
AHORRO_RENTA_ts <- ts(AHORRO_RENTA[,2:3], start=c(1970), end = c(2005))
plot(AHORRO_RENTA_ts)
# Modelo A
#
summary(dynlm_A <- dynlm(AH ~ L(AH, 1:2)), data = AHORRO_RENTA_ts, start = c(1972), end = c(2005))
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:1) + L(Y, 0:0)), data = AHORRO_RENTA_ts, start = c(1972), end = c(2005))
#
View(AHORRO_RENTA_ts)
summary(dynlm_A <- dynlm(AH ~ L(AH, 1:2)), data = AHORRO_RENTA_ts)
# Modelo A
#
summary(dynlm_A <- dynlm(AH ~ L(AH, 1:2)), data = AHORRO_RENTA_ts, start = c(1972), end = c(2005))
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:1) + L(Y, 0:0)), data = AHORRO_RENTA_ts, start = c(1972), end = c(2005))
#
View(AHORRO_RENTA_ts)
summary(lm(AH ~ Y, data = AHORRO_RENTA_ts))
summary(dynlm(AH ~ Y, data = AHORRO_RENTA_ts))
summary(dynlm(AH ~ Y, data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
# Modelo A
#
summary(dynlm_A <- dynlm(AH ~ L(AH, 1:2)), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1))
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:1) + L(Y, 0:0)), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1))
#
summary(dynlm(AH ~ Y, data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
summary(dynlm(AH ~ Y + L(AH), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
summary(dynlm(AH ~ Y + L(AH, 1:1), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
summary(dynlm(AH ~ L(Y,0:0) + L(AH, 1:1), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
# Modelo B
#
summary(dynlm_B <- summary(dynlm(AH ~ L(Y,0:0) + L(AH, 1:1), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1))))
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(Y,0:0) + L(AH, 1:1), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:1), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:2), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
#
rm(list=ls())
#
library(tidyverse)
library(dynlm)
library(car)
library(lmtest)
library(performance)
#
AHORRO_RENTA <- read_csv("SAV_USA.csv")
AHORRO_RENTA_ts <- ts(AHORRO_RENTA[,2:3], start=c(1970), end = c(2005))
plot(AHORRO_RENTA_ts)
#
# Modelo A
#
summary(dynlm_A <- dynlm(AH ~ L(AH, 1:2), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(Y,0:0) + L(AH, 1:1), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
#
# Contraste de Cox
#
coxtest(dynlm_A, dynlm_B)
#
#  Contraste J de Davidson y MacKinnon
#
jtest(dynlm_A, dynlm_B)
#
# Modelo anidado
#
S(dynlm_AB <- dynlm(AH ~ L(AH, 1:2)  + L(Y, 0:0)), data = AHORRO_RENTA_ts)
#
# Comparación de modelos (librería performance)
#
model_performance(dynlm_A)
model_performance(dynlm_B)
compare_performance(dynlm_A, dynlm_B, rank = TRUE)
plot(compare_performance(dynlm_A, dynlm_B, rank = TRUE))
#
# Modelo AB
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:2), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
#
# Modelo AB
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:2) + L(Y,0:0), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
#
rm(list=ls())
#
library(tidyverse)
library(dynlm)
library(car)
library(lmtest)
library(performance)
#
AHORRO_RENTA <- read_csv("SAV_USA.csv")
AHORRO_RENTA_ts <- ts(AHORRO_RENTA[,2:3], start=c(1970), end = c(2005))
plot(AHORRO_RENTA_ts)
#
# Modelo A
#
summary(dynlm_A <- dynlm(AH ~ L(AH, 1:2), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
#
# Modelo B
#
summary(dynlm_B <- dynlm(AH ~ L(Y,0:0) + L(AH, 1:1), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
#
# Contraste de Cox
#
coxtest(dynlm_A, dynlm_B)
#
#  Contraste J de Davidson y MacKinnon
#
jtest(dynlm_A, dynlm_B)
#
# Modelo anidado
#
summary(dynlm_B <- dynlm(AH ~ L(AH, 1:2) + L(Y,0:0), data = AHORRO_RENTA_ts, start = c(1972,1), end = c(2005,1)))
#
# Comparación de modelos (librería performance)
#
model_performance(dynlm_A)
model_performance(dynlm_B)
compare_performance(dynlm_A, dynlm_B, rank = TRUE)
plot(compare_performance(dynlm_A, dynlm_B, rank = TRUE))
#
