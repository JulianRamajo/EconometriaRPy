library(reticulate)
py_config()
conda_list()
conda_python()
conda_version()
?update
?update.packages
library(reticulate)
install.packages("reticulate")
library(reticulate)
miniconda_update()
miniconda_path()
conda_list()
py_available()
py_version()
py_config()
install.packages("yaml")
update.packages(checkBuilt=TRUE, ask=FALSE)
install.packages(c("BMA", "e1071", "GWmodel", "ks", "lamW", "leafem", "leafpop", "plot3D", "RcppArmadillo", "rversions", "spdep", "stochvol"))
install.packages("spdep")
install.packages("sf")
install.packages("spatialreg")
install.packages("plot3D")
#
library(readr)
#
COST_TEXT <- read_csv("~/Documents/GitHub/EcoMetricsRPy/COST_TEXT.csv")
#
plot(COST_TEXT$Q, COST_TEXT$COST)
#
library(ggplot2)
ggplot(COST_TEXT, aes(x = Q, y = COST)) + geom_point()
#
model1 <- lm(COST ~ Q + I(Q^2), data = COST_TEXT)
summary(model1)
#
# model2 <- lm(COST ~ poly(Q, 2, raw = TRUE), data = COST_TEXT)
# summary(model2)
setwd("~/Documents/GitHub/EcoMetricsRPy")
#
library(readr)
#
PUB_VENTAS <- read_csv("~/Documents/GitHub/EcoMetricsRPy/PUB_VENTAS.csv")
#
library(plotly)
library(magrittr)
#
model1 <- lm(data = PUB_VENTAS, formula = VENTAS ~ TV + RADIO)
summary(model2)
#
library(readr)
#
PUB_VENTAS <- read_csv("~/Documents/GitHub/EcoMetricsRPy/PUB_VENTAS.csv")
#
library(plotly)
library(magrittr)
#
model1 <- lm(data = PUB_VENTAS, formula = VENTAS ~ TV + RADIO)
summary(model2)
#
library(readr)
#
PUB_VENTAS <- read_csv("~/Documents/GitHub/EcoMetricsRPy/PUB_VENTAS.csv")
#
library(plotly)
library(magrittr)
#
model1 <- lm(data = PUB_VENTAS, formula = VENTAS ~ TV + RADIO)
summary(model1)
plot_ly(data = PUB_VENTAS) %>%
add_trace(x = ~TV, y = ~RADIO, z = ~VENTAS, mode = "markers", type = "scatter3d",
marker = list(size = 5, color = "blue", symbol = 104), name = "Observaciones") %>%
add_trace(z = model$fitted.values, x = ~P, y = ~Y, type = "mesh3d",
name = "Valores ajustados") %>%
layout(scene = list(xaxis = list(title = 'P'), yaxis = list(title = 'Y'),
camera = list(eye = list(x = -1.5, y = 1.5, z = 0)),
zaxis = list(title = 'Q'), aspectmode='cube')) #
#
library(readr)
#
PUB_VENTAS <- read_csv("~/Documents/GitHub/EcoMetricsRPy/PUB_VENTAS.csv")
#
library(plotly)
library(magrittr)
#
model1 <- lm(data = PUB_VENTAS, formula = VENTAS ~ TV + RADIO)
summary(model1)
plot_ly(data = PUB_VENTAS) %>%
add_trace(x = ~TV, y = ~RADIO, z = ~VENTAS, mode = "markers", type = "scatter3d",
marker = list(size = 5, color = "blue", symbol = 104), name = "Observaciones") %>%
add_trace(z = model1$fitted.values, x = ~P, y = ~Y, type = "mesh3d",
name = "Valores ajustados") %>%
layout(scene = list(xaxis = list(title = 'P'), yaxis = list(title = 'Y'),
camera = list(eye = list(x = -1.5, y = 1.5, z = 0)),
zaxis = list(title = 'Q'), aspectmode='cube')) #
#
library(readr)
#
PUB_VENTAS <- read_csv("~/Documents/GitHub/EcoMetricsRPy/PUB_VENTAS.csv")
#
library(plotly)
library(magrittr)
#
model1 <- lm(data = PUB_VENTAS, formula = VENTAS ~ TV + RADIO)
summary(model1)
plot_ly(data = PUB_VENTAS) %>%
add_trace(x = ~TV, y = ~RADIO, z = ~VENTAS, mode = "markers", type = "scatter3d",
marker = list(size = 5, color = "blue", symbol = 104), name = "Observaciones") %>%
add_trace(z = model1$fitted.values, x = ~TV, y = ~RADIO, type = "mesh3d",
name = "Valores ajustados") %>%
layout(scene = list(xaxis = list(title = 'P'), yaxis = list(title = 'Y'),
camera = list(eye = list(x = -1.5, y = 1.5, z = 0)),
zaxis = list(title = 'Q'), aspectmode='cube')) #
#
library(readr)
#
PUB_VENTAS <- read_csv("~/Documents/GitHub/EcoMetricsRPy/PUB_VENTAS.csv")
#
library(plotly)
library(magrittr)
#
model1 <- lm(data = PUB_VENTAS, formula = VENTAS ~ TV + RADIO)
summary(model1)
plot_ly(data = PUB_VENTAS) %>%
add_trace(x = ~TV, y = ~RADIO, z = ~VENTAS, mode = "markers", type = "scatter3d",
marker = list(size = 5, color = "blue", symbol = 104), name = "Observaciones") %>%
add_trace(z = model1$fitted.values, x = ~TV, y = ~RADIO, type = "mesh3d",
name = "Valores ajustados") %>%
layout(scene = list(xaxis = list(title = 'TV'), yaxis = list(title = 'RADIO'),
camera = list(eye = list(x = -1.5, y = 1.5, z = 0)),
zaxis = list(title = 'VENTAS'), aspectmode='cube')) #
#
reticulate::repl_python()
#
library(readr)
#
PUB_VENTAS <- read_csv("~/Documents/GitHub/EcoMetricsRPy/PUB_VENTAS.csv")
#
library(plotly)
library(magrittr)
#
model1 <- lm(data = PUB_VENTAS, formula = VENTAS ~ TV + RADIO)
summary(model1)
plot_ly(data = PUB_VENTAS) %>%
add_trace(x = ~TV, y = ~RADIO, z = ~VENTAS, mode = "markers", type = "scatter3d",
marker = list(size = 5, color = "blue", symbol = 104), name = "Observaciones") %>%
add_trace(z = model1$fitted.values, x = ~TV, y = ~RADIO, type = "mesh3d",
name = "Valores ajustados") %>%
layout(scene = list(xaxis = list(title = 'TV'), yaxis = list(title = 'RADIO'),
camera = list(eye = list(x = -1.5, y = 1.5, z = 0)),
zaxis = list(title = 'VENTAS'), aspectmode='cube')) #
#
model2 <- lm(data = PUB_VENTAS, formula = VENTAS ~ TV * RADIO)
summary(model2)
#
library(readr)
#
PUB_VENTAS <- read_csv("~/Documents/GitHub/EcoMetricsRPy/PUB_VENTAS.csv")
#
library(plotly)
library(magrittr)
#
model1 <- lm(data = PUB_VENTAS, formula = VENTAS ~ TV + RADIO)
summary(model1)
plot_ly(data = PUB_VENTAS) %>%
add_trace(x = ~TV, y = ~RADIO, z = ~VENTAS, mode = "markers", type = "scatter3d",
marker = list(size = 5, color = "blue", symbol = 104), name = "Observaciones") %>%
add_trace(z = model1$fitted.values, x = ~TV, y = ~RADIO, type = "mesh3d",
name = "Valores ajustados") %>%
layout(scene = list(xaxis = list(title = 'TV'), yaxis = list(title = 'RADIO'),
camera = list(eye = list(x = -1.5, y = 1.5, z = 0)),
zaxis = list(title = 'VENTAS'), aspectmode='cube'))
#
model2 <- lm(data = PUB_VENTAS, formula = VENTAS ~ TV * RADIO)
summary(model2)
plot_ly(data = PUB_VENTAS) %>%
add_trace(x = ~TV, y = ~RADIO, z = ~VENTAS, mode = "markers", type = "scatter3d",
marker = list(size = 5, color = "blue", symbol = 104), name = "Observaciones") %>%
add_trace(z = model2$fitted.values, x = ~TV, y = ~RADIO, type = "mesh3d",
name = "Valores ajustados") %>%
layout(scene = list(xaxis = list(title = 'TV'), yaxis = list(title = 'RADIO'),
camera = list(eye = list(x = -1.5, y = 1.5, z = 0)),
zaxis = list(title = 'VENTAS'), aspectmode='cube'))
#
