---
engine: knitr
excerpt: ""
draft: false
format: 
  html:
    theme: simplex
    self-contained: true
    max-width: 1920px
    code-fold: show
    code-tools: true
    highlight-style: atom-one-dark
    code-block-bg: "#282c34"
---

```{css, echo = FALSE}
.justify { text-align: justify !important }
```

::: justify
# Aplicación 2.2: Predicción con el modelo de regresión lineal {.unnumbered}

## Curva de Engel para el gasto en alimentos {.unnumbered}

En esta aplicación se estimará una curva de Engel que relaciona el gasto familiar en alimentación con la renta disponible, 
usando una muestra de 235 familias americanas:

$$
GALIM_{i} = f(RENTA_{i}) + e_{i}
$$
:::

## Código R {.unnumbered}

```{r}
#| include: true
#| warning: false
#| message: false

# Lectura de librerías
library(tidyverse)
# Lectura de datos
ENGEL_ALIM <- read_delim("data/ENGEL_ALIM_USA.csv", ";", 
                         escape_double = FALSE, trim_ws = TRUE)
# Diagrama de puntos (scatter plot) de las variables RENTA y GALIM
ggplot(ENGEL_ALIM, aes(x = RENTA, y = GALIM)) + 
  geom_point() + 
  scale_x_continuous(limits = c(350, 5000), expand = c(0, 0)) + 
  theme_bw() + 
  labs(x = "Renta", y = "Gasto en alimentos")
ggplot(ENGEL_ALIM, aes(x = RENTA, y = GALIM)) + 
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE) + 
  scale_x_continuous(limits = c(350, 5000), expand = c(0, 0)) + 
  theme_bw() + 
  labs(x = "Renta", y = "Gasto en alimentos")
# Estimación de una curva de Engel lineal por MCO
CURVA_ENGEL_LINEAL <- lm(GALIM ~ RENTA, data = ENGEL_ALIM)
summary(CURVA_ENGEL_LINEAL)
# Predicción
# Vector que contiene los nuevos valores de las variables explicativas
new_RENTA <- data.frame(RENTA=c(400, 2000, 4500))
new_RENTA
# Predicción puntual
pred_GALIM <- predict(CURVA_ENGEL_LINEAL, new_RENTA)
names(pred_GALIM) <-c("Renta = 400", "2000", "4500")
pred_GALIM
# Predicción del valor esperado con intervalo de confianza
pred_GALIM_IC <- predict(CURVA_ENGEL_LINEAL, new_RENTA, interval="confidence", level=0.95)
pred_GALIM_IC
```

## Código Python {.unnumbered}

```{python}
#| include: true
#| warning: false
#| message: false

# Lectura de librerías
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import statsmodels.formula.api as smf
# Lectura de datos
ENGEL_ALIM = pd.read_csv('data/ENGEL_ALIM_USA.csv', delimiter=';')
# Estimación del modelo
CURVA_ENGEL_LINEAL = smf.ols('GALIM ~ RENTA', data=ENGEL_ALIM)
results=CURVA_ENGEL_LINEAL.fit()
print(results.summary())
# Predicción
# Generar un vector que contiene los nuevos valores de las variables explicativas
new_RENTA = pd.DataFrame({'RENTA': [400, 2000, 4500]}, index=['newRENTA1', 'newRENTA2', 'newRENTA3'])
print(f'new_RENTA: \n{new_RENTA}\n')
# Predicción puntual
pred_GALIM = results.predict(new_RENTA)
print(f'pred_GALIM: \n{pred_GALIM}\n')
# Predicción con intervalo de confianza
pred_GALIM_IC = results.get_prediction(new_RENTA).summary_frame(alpha=0.05)
print(f'pred_GALIM_IC: \n{pred_GALIM_IC}\n')
```
